/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import com.android.dx.util.ByteArray;
import com.google.gson.Gson;
import dao.ConnectionProvider;
import net.glxn.qrgen.core.image.ImageType;
import net.glxn.qrgen.javase.QRCode;
import utility.BDUtility;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.awt.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;

import static java.lang.ProcessBuilder.Redirect.to;

/**
 *
 * @author Prathamesh Patil
 */
public class GenerateQr extends javax.swing.JFrame {

    /**
     * Creates new form GenerateQr
     */
    public GenerateQr() {
        initComponents();
        BDUtility.setImage(this,"Images/GenerateQr.jpg",1203,530);
        this.getRootPane().setBorder(BorderFactory.createMatteBorder(4,4,4,4, Color.black));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        lblImage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        btnSaveQr = new javax.swing.JButton();
        btnSaveQrAt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1201, 530));
        setMinimumSize(new java.awt.Dimension(1201, 530));
        setUndecorated(true);

        btnExit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExit.setText("X");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {

                formComponentShown(evt);
            }
        });
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);

            }
        });


        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Generate User QR");

        jInternalFrame1.setVisible(true);

        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImageMouseClicked(evt);
            }
        });


        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
                jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
                jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        userTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Id", "Name", "Gender", "Email", "Contact", "Address", "State", "Country", "Registration Id"
                }
        ));
        jScrollPane1.setViewportView(userTable);

        btnSaveQr.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSaveQr.setText("Save Qr");
        btnSaveQr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveQrActionPerformed(evt);
            }
        });


        btnSaveQrAt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSaveQrAt.setText("Save Qr At");
        btnSaveQrAt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveQrAtActionPerformed(evt);
            }
        });


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addComponent(btnSaveQr, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(btnSaveQrAt, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(449, 449, 449)
                                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(jLabel1)))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(btnSaveQr, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnSaveQrAt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }

    private void lblImageMouseClicked(java.awt.event.MouseEvent evt) {

    }
    private void formComponentShown(java.awt.event.ComponentEvent evt) {
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        try {
            Connection connection = ConnectionProvider.getcon();
            Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery("select * from userdetails");

            while(resultSet.next()){
                model.addRow(new Object[]{
                        resultSet.getString("id"),
                        resultSet.getString("name"),
                        resultSet.getString("gender"),
                        resultSet.getString("email"),
                        resultSet.getString("contact"),
                        resultSet.getString("address"),
                        resultSet.getString("state"),
                        resultSet.getString("country"),
                        resultSet.getString("uniqueregid"),
                        resultSet.getString("imagename"),
                });
            }
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null,"Something went wrong.");
        }

    }
    ByteArrayOutputStream out = null;
    String email = null;
    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {
        int index = userTable.getSelectedRow();
        TableModel model = userTable.getModel();
        String id = model.getValueAt(index,0).toString();
        String name = model.getValueAt(index, 1).toString();
        email = model.getValueAt(index,3).toString();
        String registrationId = model.getValueAt(index, 8).toString();

        Map<String,String> data = new HashMap<>();
        data.put("id", id);
        data.put("name",name);
        data.put("email",email);
        data.put("registrationId",registrationId);

        Gson gson  = new Gson();
        String jsonData = gson.toJson(data);

        out = QRCode.from(jsonData).withSize(322,286).to(ImageType.PNG).stream();
        try{
            byte[] imageData = out.toByteArray();
            ImageIcon icon = new ImageIcon(imageData);
            lblImage.setIcon(icon);

        }catch (Exception ex){
            ex.printStackTrace();
        }

    }


    private void btnSaveQrActionPerformed(java.awt.event.ActionEvent evt) {
        try{
            if(out == null){
                JOptionPane.showMessageDialog(this,"No Qr Generated.!");
                return;
            }
            String defaultDir = BDUtility.getPath("qrCodes");
            File directory = new File(defaultDir);
            if(!directory.exists()){
                directory.mkdirs();
            }

            File defaultFile = new File(directory, email+ ".jpg") ;
            try{
                java.nio.file.Files.write(defaultFile.toPath(), out.toByteArray());
                JOptionPane.showMessageDialog(null, "QR Code saved successfully!");
            }catch (Exception ex){
                JOptionPane.showMessageDialog(this,"Error saving QR code","Error",JOptionPane.ERROR_MESSAGE);
            }
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Something went wrong.");
        }
    }
    private void btnSaveQrAtActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            if (out == null) {
                JOptionPane.showMessageDialog(this, "No Qr Generated.!");
                return;
            }
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Save QR code at ");
            fileChooser.setSelectedFile(new File(email+".png"));
            int userSelection = fileChooser.showSaveDialog(this);
            if(userSelection ==  JFileChooser.APPROVE_OPTION){
                File filToSave = fileChooser.getSelectedFile();
                try{
                    java.nio.file.Files.write(filToSave.toPath(), out.toByteArray());
                    JOptionPane.showMessageDialog(this,"Qr code saved successfully");

                }catch (Exception ex){
                    JOptionPane.showMessageDialog(this,"Error saving QR code","Error",JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception ex){
                JOptionPane.showMessageDialog(null, "Something went wrong.");
            }

    }


    /**
     * @param args the command line arguments
     *
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenerateQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenerateQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenerateQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenerateQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenerateQr().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSaveQr;
    private javax.swing.JButton btnSaveQrAt;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable userTable;
    private javax.swing.JLabel lblImage;
    // End of variables declaration
}
