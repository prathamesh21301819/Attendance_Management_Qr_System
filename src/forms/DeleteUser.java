package forms;

import dao.ConnectionProvider;
import utility.BDUtility;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.awt.*;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Objects;

/**
 *
 * @author Prathamesh Patil
 */
public class DeleteUser extends javax.swing.JFrame {

    /**
     * Creates new form DeleteUser
     */
    public DeleteUser() {
        initComponents();
        BDUtility.setImage(this,"Images/DeleteUser.jpg",1087,491);
        this.getRootPane().setBorder(BorderFactory.createMatteBorder(4,4,4,4, Color.ORANGE));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1087, 491));
        setMinimumSize(new java.awt.Dimension(1087, 491));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {

                formComponentShown(evt);
            }
        });


        btnExit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExit.setText("X");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Delete User");

        userTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Id", "Name", "Gender", "Contact", "Address", "State", "Country", "Registration Id", "Image Name"
                }
        ));
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            userTableMouseClicked(evt);

        }
    });
        jScrollPane1.setViewportView(userTable);

        lblSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSearch.setText("Search");


        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(458, 458, 458)
                                                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1029, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(36, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblSearch)
                                .addGap(219, 219, 219))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addComponent(lblSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }
    private void formComponentShown(java.awt.event.ComponentEvent evt) {
        fetchUser(null);

    }
    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {
        String searchText = txtSearch.getText().toString();
        if(Objects.isNull(searchText) || searchText.isEmpty()) {
            fetchUser(null);
        }else{
            fetchUser(searchText);
        }
    }
    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {
        try{
            int dialogResult = JOptionPane.showConfirmDialog(null,"* User details\n* Images\n* QR codes\n* Attendance\n\nAssociated with this user will be deleted. " +
                    "\n Are you sure you want to proceed ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                int index = userTable.getSelectedRow();
                TableModel model = userTable.getModel();
                String email = model.getValueAt(index,3).toString();
                String imagePath = BDUtility.getPath("/images"+File.separator +email+ ".jpg");
                deleteFile(imagePath);
                imagePath = BDUtility.getPath("/qrCodes"+File.separator + email+".jpg");
                deleteFile(imagePath);

                Connection connection = ConnectionProvider.getcon();
                String attendanceDeleteQuery = "DELETE userattendance, userdetails FROM userdetails LEFT JOIN " +
                        "userattendance ON userattendance.userid=userdetails.id where userdetails.email=?";

                PreparedStatement preparedStatement = connection.prepareStatement(attendanceDeleteQuery);
                preparedStatement.setString(1,email);
                preparedStatement.executeUpdate();
                fetchUser(null);
                JOptionPane.showMessageDialog(null,"User deleted Successfully.","Confirmation",JOptionPane.INFORMATION_MESSAGE);

            }else{
                JOptionPane.showMessageDialog(null,"Deletion  Cancelled.", "Confirmation",JOptionPane.INFORMATION_MESSAGE);
            }
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null,"Something went wrong.","Error",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fetchUser(String searchText) throws HeadlessException{
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        model.setRowCount(0);
        try{
            Connection con = ConnectionProvider.getcon();
            Statement statement = con.createStatement();
            String query = null;
            if(Objects.isNull(searchText)){
                query = "select * from userdetails";
            }else{
                query = "select * from userdetails where name like '%"+searchText+"%' or email like '%"+searchText+"%'";
            }
            ResultSet resultSet = statement.executeQuery(query);
            int rowNum = 1;
            while (resultSet.next()){
                model.addRow(new Object[]{

                        rowNum++,
                        resultSet.getString("name"),
                        resultSet.getString("gender"),
                        resultSet.getString("email"),
                        resultSet.getString("contact"),
                        resultSet.getString("address"),
                        resultSet.getString("state"),
                        resultSet.getString("country"),
                        resultSet.getString("uniqueregid"),
                        resultSet.getString("imagename"),
                });
            }
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }

    }

    private void deleteFile(String filePath){
        File fileToDelete = new File(filePath);
        if(fileToDelete.exists()){
            if(fileToDelete.delete()){
                System.out.println("File deleted successfully");
            }else{
                System.out.println("failed to delete the file");
            }
        }else{
            System.out.println("File doesn't exists");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable userTable;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration
}
